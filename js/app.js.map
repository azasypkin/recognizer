{"version":3,"file":"app.js","sources":["app.js","defer.js","video-manager.js","text-recognizer.js","speech-synthesizer.js","describers/unknown-thing-describer.js","thing-describer.js","local-storage.js","in-memory-storage.js","painter.js"],"sourcesContent":["import Defer from './defer';\nimport VideoManager from './video-manager';\nimport TextRecognizer from './text-recognizer';\nimport ThingDescriber from './thing-describer';\nimport LocalStorage from './local-storage';\nimport InMemoryStorage from './in-memory-storage';\nimport Painter from './painter';\n\nconst sampleActions = Object.freeze({\n  RECOGNIZE: 'RECOGNIZE',\n  REPEAT: 'REPEAT',\n  ROTATE: 'ROTATE'\n});\n\nconst canPlayDefer = new Defer();\nconst videoManager = new VideoManager();\nconst thingDescriber = new ThingDescriber();\nconst textRecognizer = new TextRecognizer();\nconst storage = LocalStorage.isSupported() ?\n  new LocalStorage() : new InMemoryStorage();\n\nconst samples = new Map();\n\nconst sampleIds = new Uint32Array(100);\nwindow.crypto.getRandomValues(sampleIds);\nlet currentSampleIndex = 0;\n\nconst apiKeyComponent = document.querySelector('.access__api-key');\n\napiKeyComponent.addEventListener('change', () => {\n  storage.set('access', 'api-key', apiKeyComponent.value);\n  textRecognizer.setAPIKey(apiKeyComponent.value);\n});\n\nstorage.getByKey('access', 'api-key').catch((e) => {\n  console.warn('Could not retrieve API key from the storage', e);\n  return '';\n}).then((apiKey) => {\n  apiKeyComponent.value = apiKey;\n  textRecognizer.setAPIKey(apiKey);\n});\n\nconst samplesListComponent = document.querySelector('.samples-list');\nconst blobRendererComponent = document.querySelector('.blob__renderer');\nconst blobLoaderComponent = document.querySelector('.blob__loader');\n\nsamplesListComponent.addEventListener('click', (e) => {\n  if (!apiKeyComponent.value) {\n    alert('Please provide Microsoft Vision API key.');\n    return;\n  }\n\n  const sampleId = e.target.dataset.sampleId;\n  if (e.target.nodeName.toUpperCase() !== 'BUTTON' || !sampleId) {\n    return;\n  }\n\n  const sample = samples.get(Number.parseInt(sampleId));\n  const buttonKind = e.target.dataset.kind;\n\n  if (buttonKind === sampleActions.RECOGNIZE) {\n    textRecognizer.recognize(sample.image).then((textMetadata) => {\n      console.log('Success: %o', textMetadata);\n\n      sample.text = textMetadata;\n      samples.set(sample.id, sample);\n\n      const container = document.getElementById(sample.id);\n      container.classList.add('sample__container--recognized');\n\n      return getSampleCanvas(sample).then((textCanvas) => {\n        thingDescriber.describe(textMetadata, textCanvas);\n\n        blobRendererComponent.toBlob((imageBlob) => {\n          document.getElementById(sample.id).querySelector('img').src =\n            window.URL.createObjectURL(imageBlob);\n        });\n      });\n    }).catch((err) => {\n      console.error('Failure %o', err);\n    });\n  } else if (buttonKind === sampleActions.REPEAT) {\n    thingDescriber.describe(sample.text);\n  }\n});\n\nconst videoPreviewComponent = document.querySelector('.video__preview');\n\nconst context = blobRendererComponent.getContext('2d');\ncontext.fillStyle = '#aaa';\ncontext.fillRect(\n    0,\n    0,\n    blobRendererComponent.width,\n    blobRendererComponent.height\n);\n\nvideoManager.getMediaStream().then((stream) => {\n  videoPreviewComponent.src = window.URL.createObjectURL(stream);\n\n  videoPreviewComponent.addEventListener('loadedmetadata', () => {\n    videoPreviewComponent.play();\n\n    canPlayDefer.resolve({\n      width: videoPreviewComponent.videoWidth,\n      height: videoPreviewComponent.videoHeight\n    });\n  }, false);\n}).catch((err) => {\n  canPlayDefer.reject(err);\n});\n\nfunction addSample(sampleBlob) {\n  const sampleId = sampleIds[currentSampleIndex++];\n\n  const sampleContainer = document.createElement('div');\n  sampleContainer.classList = 'sample__container';\n  sampleContainer.id = sampleId;\n\n  const samplePreview = document.createElement('img');\n  samplePreview.classList = 'sample__preview';\n  samplePreview.src = window.URL.createObjectURL(sampleBlob);\n\n  const recognizeButton = document.createElement('button');\n  recognizeButton.type = 'button';\n  recognizeButton.textContent = 'Recognize';\n  recognizeButton.classList = 'sample__recognize-button action-button';\n  recognizeButton.dataset.sampleId = sampleId;\n  recognizeButton.dataset.kind = sampleActions.RECOGNIZE;\n\n  const repeatButton = document.createElement('button');\n  repeatButton.type = 'button';\n  repeatButton.textContent = 'Repeat text';\n  repeatButton.classList = 'sample__repeat-button action-button';\n  repeatButton.dataset.sampleId = sampleId;\n  repeatButton.dataset.kind = sampleActions.REPEAT;\n\n  sampleContainer.appendChild(samplePreview);\n  sampleContainer.appendChild(recognizeButton);\n  sampleContainer.appendChild(repeatButton);\n\n  samplesListComponent.appendChild(sampleContainer);\n\n  samples.set(sampleId, { id: sampleId, image: sampleBlob, text: null });\n}\n\nfunction getSampleCanvas(sample) {\n  const defer = new Defer();\n\n  blobLoaderComponent.src = window.URL.createObjectURL(sample.image);\n\n  blobLoaderComponent.onload = () => {\n    const canvasContext = blobRendererComponent.getContext('2d');\n\n    canvasContext.clearRect(\n      0, 0, Number(blobRendererComponent.getAttribute('width')),\n      Number(blobRendererComponent.getAttribute('height'))\n    );\n\n    blobRendererComponent.setAttribute('width', blobLoaderComponent.width);\n    blobRendererComponent.setAttribute('height', blobLoaderComponent.height);\n\n    canvasContext.drawImage(\n      blobLoaderComponent, 0, 0, blobLoaderComponent.width,\n      blobLoaderComponent.height\n    );\n\n    defer.resolve({\n      context: canvasContext,\n      width: blobLoaderComponent.width,\n      height: blobLoaderComponent.height\n    });\n  };\n\n  blobLoaderComponent.onerror = (e) => defer.reject(e);\n\n  return defer.promise;\n}\n\n/** Sample Camera provider **/\n\nconst shotButton = document.querySelector('.video__shot-button');\nshotButton.setAttribute('disabled', 'disabled');\nshotButton.addEventListener('click', () => {\n  const width = videoPreviewComponent.clientWidth;\n  const height = videoPreviewComponent.clientHeight;\n\n  blobRendererComponent.setAttribute('width', width);\n  blobRendererComponent.setAttribute('height', height);\n\n  blobRendererComponent.getContext('2d').drawImage(\n    videoPreviewComponent, 0, 0, Number(width), Number(height)\n  );\n\n  blobRendererComponent.toBlob((imageBlob) => {\n    addSample(imageBlob);\n  });\n});\n\ncanPlayDefer.promise.then(() => {\n  shotButton.removeAttribute('disabled');\n});\n\n/** End of Sample Camera provider **/\n\n\n/** Sample URL provider **/\nconst urlProviderURL = document.querySelector('.sample-url-provider__url');\nconst urlProviderSubmit = document.querySelector(\n  '.sample-url-provider__submit'\n);\n\nfunction addSampleFromURL(url) {\n  return fetch(url).catch((e) => {\n    console.warn('Can not load image directly, trying through the proxy: ', e);\n\n    const proxyURL = `https://recognizer-ocr-proxy.herokuapp.com/?${url}`;\n    const headers = new Headers();\n    headers.append('Target-URL', url);\n\n    return fetch(proxyURL, { headers });\n  }).then((response) => {\n    return response.blob();\n  }).then((blob) => {\n    addSample(blob);\n  }).catch((e) => {\n    console.error('Failed to add sample from URL: ', e);\n    alert('Failed to add sample! See log for more details...');\n  });\n}\n\nurlProviderSubmit.addEventListener('click', () => {\n  const sampleURL = urlProviderURL.value;\n  if (!sampleURL) {\n    alert('Please provide a valid image URL!');\n    return;\n  }\n\n  addSampleFromURL(sampleURL);\n});\n\n/** End of Sample URL provider **/\n\n\n/** Sample Local File provider **/\n\nconst localFileProviderPath = document.querySelector(\n  '.local-file-provider__path'\n);\n\nconst localFileProviderUpload = document.querySelector(\n  '.local-file-provider__upload'\n);\n\nlocalFileProviderPath.addEventListener('change', (e) => {\n  for (const file of e.target.files) {\n    addSample(file);\n  }\n});\n\nlocalFileProviderUpload.addEventListener('click', () => {\n  localFileProviderPath.click();\n});\n\n/** End of Sample URL provider **/\n\n\n/** Manual Sample provider **/\nconst manualSampleCanvas = document.querySelector(\n  '.manual-sample-provider__canvas'\n);\n\nconst manualSampleColorPicker = document.querySelector(\n  '.manual-sample-provider__color-picker'\n);\n\nconst manualSampleWidth = document.querySelector(\n  '.manual-sample-provider__width'\n);\n\nconst manualSampleClearButton = document.querySelector(\n  '.manual-sample-provider__clear-button'\n);\n\nconst manualSampleSubmit = document.querySelector(\n  '.manual-sample-provider__submit'\n);\n\nconst painter = new Painter(manualSampleCanvas);\n\nmanualSampleColorPicker.addEventListener('change', () => {\n  painter.setStyle(\n    manualSampleColorPicker.value,\n    Number(manualSampleWidth.value)\n  );\n});\n\nmanualSampleWidth.addEventListener('change', () => {\n  painter.setStyle(\n    manualSampleColorPicker.value,\n    Number(manualSampleWidth.value)\n  );\n});\n\nmanualSampleClearButton.addEventListener('click', () => {\n  painter.clear();\n});\n\nmanualSampleSubmit.addEventListener('click', () => {\n  manualSampleCanvas.toBlob((imageBlob) => addSample(imageBlob));\n});\n\n/** End of Manual Sample provider **/\n\nfunction addSampleFromHash() {\n  if (!location.hash || location.hash.length < 2) {\n    return;\n  }\n\n  addSampleFromURL(location.hash.slice(1).trim());\n}\n\nwindow.addEventListener('hashchange', () => {\n  addSampleFromHash();\n});\n\naddSampleFromHash();","'use strict';\n\nconst p = Object.freeze({\n  promise: Symbol('promise'),\n  resolve: Symbol('resolve'),\n  reject: Symbol('reject'),\n});\n\n/**\n * Instance of the Defer class is just a handy wrapper around native Promise\n * object intended to provide dedicated 'resolve' and 'reject' methods.\n */\nexport default class Defer {\n  constructor() {\n    this[p.promise] = new Promise((resolve, reject) => {\n      this[p.resolve] = resolve;\n      this[p.reject] = reject;\n    });\n\n    Object.freeze(this);\n  }\n\n  /**\n   * Actual promise instance.\n   *\n   * @return {Promise}\n   */\n  get promise() {\n    return this[p.promise];\n  }\n\n  /**\n   * Resolves promise with the specified value.\n   *\n   * @param {*=} value Optional value to resolve promise with.\n   */\n  resolve(value) {\n    this[p.resolve](value);\n  }\n\n  /**\n   * Rejects promise with the specified error.\n   *\n   * @param {*=} error Error to reject promise with.\n   */\n  reject(error) {\n    this[p.reject](error);\n  }\n}\n","const p = Object.freeze({\n  getUserMediaOld: Symbol('getUserMediaOld')\n});\n\nexport default class VideoManager {\n  getMediaStream(video = true, audio = false) {\n    // Older browsers might not implement mediaDevices at all, so we set an\n    // empty object first.\n    if(navigator.mediaDevices === undefined) {\n      navigator.mediaDevices = {};\n    }\n\n    // Some browsers partially implement mediaDevices. We can't just assign an\n    // object with getUserMedia as it would overwrite existing properties. Here,\n    // we will just add the getUserMedia property if it's missing.\n    if(navigator.mediaDevices.getUserMedia === undefined) {\n      navigator.mediaDevices.getUserMedia = this[p.getUserMediaOld];\n    }\n\n    return navigator.mediaDevices.getUserMedia({ audio, video }).then(\n      (stream) => {\n        console.log('[VideoManager]: Media stream is available.');\n\n        return stream;\n      }\n    ).catch((err) => {\n      console.error('[VideoManager]: Media stream is not available.', err);\n\n      throw err;\n    });\n  }\n\n  [p.getUserMediaOld](constraints) {\n    const getUserMedia = (navigator.getUserMedia ||\n      navigator.webkitGetUserMedia || navigator.mozGetUserMedia);\n\n    // Some browsers just don't implement it - return a rejected promise with an\n    // error to keep a consistent interface.\n    if(!getUserMedia) {\n      return Promise.reject(\n        new Error('getUserMedia is not implemented in this browser')\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  }\n}\n","const p = Object.freeze({\n  // Properties\n  apiURL: Symbol('apiURL'),\n  apiKey: Symbol('apiKey')\n});\n\nexport default class TextRecognizer {\n  constructor(apikey = '', language = 'unk', detectOrientation = true) {\n    this[p.apiURL] = 'https://api.projectoxford.ai/vision/v1.0/ocr?' +\n        `language=${language}&detectOrientation=${detectOrientation}`;\n    this[p.apiKey] = apikey;\n  }\n\n  recognize(imageBlob) {\n    const headers = new Headers();\n    headers.append('Ocp-Apim-Subscription-Key', this[p.apiKey]);\n\n    const formData = new FormData();\n    formData.append('image', imageBlob, 'image.png');\n\n    return fetch(this[p.apiURL], {\n      method: 'POST',\n      headers,\n      body: formData\n    }).then((response) => response.json());\n  }\n\n  setAPIKey(apiKey) {\n    this[p.apiKey] = apiKey;\n  }\n}\n","const p = Object.freeze({\n  pitch: Symbol('pitch'),\n  rate: Symbol('rate'),\n  synthesis: Symbol('synthesis'),\n\n  // Methods\n  getPreferredVoice: Symbol('getPreferredVoice'),\n});\n\nexport default class SpeechSynthesizer {\n  constructor(pitch, rate) {\n    this[p.pitch] = pitch;\n    this[p.rate] = rate;\n    this[p.synthesis] = window.speechSynthesis || null;\n\n    Object.seal(this);\n  }\n\n  /**\n   * Speak a text aloud.\n   *\n   * @param {string} text\n   * @param {string} language\n   */\n  speak(text = '', language = 'en') {\n    const synthesis = this[p.synthesis];\n    if (!text || !synthesis) {\n      return;\n    }\n\n    const utterance = new SpeechSynthesisUtterance(text);\n\n    const voice = this[p.getPreferredVoice](language);\n    if (voice) {\n      utterance.voice = voice;\n    }\n\n    utterance.lang = language;\n    utterance.pitch = this[p.pitch];\n    utterance.rate = this[p.rate];\n\n    synthesis.speak(utterance);\n  }\n\n  /**\n   * From all the voices available, set the default language to English with a\n   * female voice if available.\n   *\n   * @param {string} language\n   *\n   * @returns {Object}\n   */\n  [p.getPreferredVoice](language) {\n    const allVoices = this[p.synthesis].getVoices();\n    if (!allVoices.length) {\n      return null;\n    }\n\n    const voices = allVoices.filter((voice) => voice.lang.startsWith(language));\n    const femaleVoices = voices.filter(\n      (voice) => voice.name.includes('Female')\n    );\n\n    if (femaleVoices.length) {\n      return femaleVoices[0];\n    }\n\n    if (voices.length) {\n      return voices[0];\n    }\n\n    // If we can't find any voice for the language let's fallback to English.\n    if (!language.startsWith('en')) {\n      return this[p.getPreferredVoice]('en');\n    }\n\n    return null;\n  }\n}\n","const LANGUAGES = new Map([\n  ['unk', 'Unknown'],\n  ['ar', 'Arabic'],\n  ['zh-Hans', 'Simplified Chinese'],\n  ['zh-Hant', 'Traditional Chinese'],\n  ['cs', 'Czech'],\n  ['da', 'Danish'],\n  ['nl', 'Dutch'],\n  ['en', 'English'],\n  ['fi', 'Finnish'],\n  ['fr', 'French'],\n  ['de', 'German'],\n  ['el', 'Greek'],\n  ['hu', 'Hungarian'],\n  ['it', 'Italian'],\n  ['ja', 'Japanese'],\n  ['ko', 'Korean'],\n  ['nb', 'Norwegian'],\n  ['pl', 'Polish'],\n  ['pt', 'Portuguese'],\n  ['ru', 'Russian'],\n  ['es', 'Spanish'],\n  ['sv', 'Swedish'],\n  ['tr', 'Turkish']\n]);\n\nconst orientation = Object.freeze({\n  LEFT: 'Left',\n  RIGHT: 'Right',\n  UP: 'Up',\n  DOWN: 'Down'\n});\n\nconst p = Object.freeze({\n  synthesizer: Symbol('synthesizer')\n});\n\nexport default class UnknonwThingRecognizer {\n  constructor(synthesizer) {\n    if (!synthesizer) {\n      throw new Error('Speech Synthesizer should be provided!');\n    }\n\n    this[p.synthesizer] = synthesizer;\n  }\n\n  canDescribe() {\n    return true;\n  }\n\n  describe(textMetadata, textCanvas) {\n    const numberOfTextRegions = textMetadata.regions.length;\n    if (numberOfTextRegions === 0) {\n      throw new Error('Text metadata is not provided!');\n    }\n\n    const synthesizer = this[p.synthesizer];\n    let horizontalDimension, verticalDimension;\n\n    if (textCanvas) {\n      textCanvas.context.translate(textCanvas.width / 2, textCanvas.height / 2);\n\n      horizontalDimension = textCanvas.width;\n      verticalDimension = textCanvas.height;\n\n      let textAngle = textMetadata.textAngle;\n      if (textMetadata.orientation === orientation.LEFT) {\n        textAngle -= 90;\n        horizontalDimension = textCanvas.height;\n        verticalDimension = textCanvas.width;\n      } else if (textMetadata.orientation === orientation.RIGHT) {\n        textAngle += 90;\n        horizontalDimension = textCanvas.height;\n        verticalDimension = textCanvas.width;\n      } else if (textMetadata.orientation === orientation.DOWN) {\n        textAngle += 180;\n      }\n\n      textCanvas.context.rotate(textAngle * Math.PI / 180);\n      textCanvas.context.lineWidth = 3;\n      textCanvas.context.strokeStyle = '#FF0000';\n    }\n\n    if (numberOfTextRegions === 1) {\n      synthesizer.speak('I see just one region of text.');\n    } else {\n      synthesizer.speak(`I see ${numberOfTextRegions} regions of text.`);\n    }\n\n    const language = textMetadata.language;\n\n    if (!language || language === 'unk') {\n      synthesizer.speak('I can not recognize the language.');\n    } else {\n      synthesizer.speak(\n        `I think this is ${LANGUAGES.get(language)} language.`\n      );\n    }\n\n    if (textMetadata.textAngle === 0) {\n      synthesizer.speak('Text is perfectly aligned.');\n    } else if (textMetadata.textAngle < 10) {\n      synthesizer.speak('Text is almost perfectly aligned.');\n    } else {\n      synthesizer.speak('Text is skewed.');\n    }\n\n    for (let i = 0; i < numberOfTextRegions; i++) {\n      const region = textMetadata.regions[i];\n      synthesizer.speak(\n        `Region number ${i + 1} consists of ` +\n        `${region.lines.length} lines of text.`\n      );\n\n      for (let l = 0; l < region.lines.length; l++) {\n        const line = region.lines[l];\n        synthesizer.speak(\n          `Let me read words from the line number ${l + 1}:`\n        );\n\n        const sentence = line.words.reduce((sentence, word) => {\n          const boundingBox = word.boundingBox.split(',').map((dimension) => {\n            return Number(dimension.trim());\n          });\n\n          if (textCanvas) {\n            textCanvas.context.rect(\n              boundingBox[0] - horizontalDimension / 2,\n              boundingBox[1] - verticalDimension / 2,\n              boundingBox[2], boundingBox[3]\n            );\n\n            textCanvas.context.stroke();\n          }\n\n          return `${sentence} ${word.text}`;\n        }, '');\n\n        synthesizer.speak(sentence, language);\n      }\n    }\n  }\n}","import SpeechSynthesizer from './speech-synthesizer';\nimport UnknownThingDescriber from './describers/unknown-thing-describer';\n\nconst p = Object.freeze({\n  synthesizer: Symbol('synthesizer'),\n  describers: Symbol('describers')\n});\n\nconst DEFAULT_VOICE_PITCH = 0.8;\nconst DEFAULT_VOICE_RATE = 0.9;\n\nexport default class ThingDescriber {\n  constructor(pitch = DEFAULT_VOICE_PITCH, rate = DEFAULT_VOICE_RATE) {\n    this[p.synthesizer] = new SpeechSynthesizer(pitch, rate);\n    this[p.describers] = [new UnknownThingDescriber(this[p.synthesizer])];\n  }\n\n  describe(textMetadata, textCanvas) {\n    if (textMetadata.regions.length === 0) {\n      this[p.synthesizer].speak('Sorry! I did not recognize any text.');\n      return;\n    }\n\n    for (const describer of this[p.describers]) {\n      if (describer.canDescribe(textMetadata)) {\n        describer.describe(textMetadata, textCanvas);\n        break;\n      }\n    }\n  }\n}\n","'use strict';\n\nexport default class LocalStorage {\n  static isSupported() {\n    try {\n      return !!self.localStorage && Number.isInteger(self.localStorage.length);\n    } catch(e) {\n      return false;\n    }\n  }\n\n  /**\n   * Gets all items from the specified store.\n   *\n   * @param {string} storeKey Key of the store to retrieve all items from.\n   * @return {Promise.<Array>}\n   */\n  getAll(storeKey) {\n    const serializedStore = localStorage.getItem(storeKey);\n\n    return Promise.resolve(\n      serializedStore ?\n        Array.from((new Map(JSON.parse(serializedStore))).values()) : []\n    );\n  }\n\n  /**\n   * Returns single item from the store by item's key.\n   *\n   * @param {string} storeKey Key of the store to retrieve item from.\n   * @param {string} itemKey Key of the item to retrieve.\n   * @return {*}\n   */\n  getByKey(storeKey, itemKey) {\n    const serializedStore = localStorage.getItem(storeKey);\n    const store = new Map(serializedStore ? JSON.parse(serializedStore) : []);\n\n    if (!store.has(itemKey)) {\n      return Promise.reject(\n        new Error(`There is no item (${itemKey}) in the store (${storeKey}).`)\n      );\n    }\n\n    return Promise.resolve(store.get(itemKey));\n  }\n\n  /**\n   * Adds/updates item to/in specified store.\n   *\n   * @param {string} storeKey Key of the store to save item to.\n   * @param {string} itemKey Key of the item to save.\n   * @param {*} itemData Item data to save.\n   * @return {Promise}\n   */\n  set(storeKey, itemKey, itemData) {\n    const serializedStore = localStorage.getItem(storeKey);\n\n    const store = new Map(serializedStore ? JSON.parse(serializedStore) : []);\n    store.set(itemKey, itemData);\n\n    localStorage.setItem(storeKey, JSON.stringify(Array.from(store.entries())));\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Removes item from the specified store.\n   *\n   * @param {string} storeKey Key of the store to remove item from.\n   * @param {string} itemKey Key of the item to remove.\n   * @return {Promise}\n   */\n  remove(storeKey, itemKey) {\n    const serializedStore = localStorage.getItem(storeKey);\n\n    if (serializedStore) {\n      const store = new Map(JSON.parse(serializedStore));\n      store.delete(itemKey);\n\n      localStorage.setItem(\n        storeKey, JSON.stringify(Array.from(store.entries()))\n      );\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Entirely clears specified store.\n   *\n   * @param {string} storeKey Key of the store to clear.\n   * @return {Promise}\n   */\n  clear(storeKey) {\n    localStorage.removeItem(storeKey);\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Clears all available stores.\n   *\n   * @return {Promise}\n   */\n  clearAll() {\n    localStorage.clear();\n    return Promise.resolve();\n  }\n}\n","'use strict';\n\nconst p = Object.freeze({ db: Symbol('db') });\n\nexport default class InMemoryStorage {\n  constructor() {\n    this[p.db] = new Map();\n  }\n\n  /**\n   * Gets all items from the specified store.\n   *\n   * @param {string} storeKey Key of the store to retrieve all items from.\n   * @return {Promise.<Array>}\n   */\n  getAll(storeKey) {\n    const store = this[p.db].get(storeKey);\n\n    return Promise.resolve(store ? Array.from(store.values()) : []);\n  }\n\n  /**\n   * Returns single item from the specified store by item's key.\n   *\n   * @param {string} storeKey Key of the store to retrieve item from.\n   * @param {string} itemKey Key of the item to retrieve.\n   * @return {*}\n   */\n  getByKey(storeKey, itemKey) {\n    const store = this[p.db].get(storeKey);\n\n    if (!store || store.has(itemKey)) {\n      return Promise.reject(\n        new Error(`There is no item (${itemKey}) in the store (${storeKey}).`)\n      );\n    }\n\n    return Promise.resolve(store.get(itemKey));\n  }\n\n  /**\n   * Adds/updates item to/in specified store.\n   *\n   * @param {string} storeKey Key of the store to save item to.\n   * @param {string} itemKey Key of the item to save.\n   * @param {*} itemData Item data to save.\n   * @return {Promise}\n   */\n  set(storeKey, itemKey, itemData) {\n    let store = this[p.db].get(storeKey);\n\n    if (!store) {\n      this[p.db].set(storeKey, (store = new Map()));\n    }\n\n    store.set(itemKey, itemData);\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Removes item from the specified store.\n   *\n   * @param {string} storeKey Key of the store to remove item from.\n   * @param {string} itemKey Key of the item to remove.\n   * @return {Promise}\n   */\n  remove(storeKey, itemKey) {\n    const store = this[p.db].get(storeKey);\n\n    if (store) {\n      store.delete(itemKey);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Entirely clears specified store.\n   *\n   * @param {string} storeKey Key of the store to clear.\n   * @return {Promise}\n   */\n  clear(storeKey) {\n    const store = this[p.db].get(storeKey);\n\n    if (store) {\n      store.clear();\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Clears all available stores.\n   *\n   * @return {Promise}\n   */\n  clearAll() {\n    this[p.db].clear();\n    return Promise.resolve();\n  }\n}\n","'use strict';\n\nconst p = Object.freeze({\n  canvas: Symbol('canvas'),\n  context: Symbol('context'),\n  width: Symbol('width'),\n  height: Symbol('height'),\n  currentPoint: Symbol('currentPoint'),\n  previousPoint: Symbol('previousPoint'),\n  flag: Symbol('flag'),\n  styleColor: Symbol('styleColor'),\n  styleWidth: Symbol('styleWidth'),\n\n  // Methods.\n  findXY: Symbol('findXY'),\n  draw: Symbol('draw')\n});\n\n/**\n * Instance of the Defer class is just a handy wrapper around native Promise\n * object intended to provide dedicated 'resolve' and 'reject' methods.\n */\nexport default class Painter {\n  constructor(canvas) {\n    this[p.canvas] = canvas;\n    this[p.context] = canvas.getContext('2d');\n    this[p.width] = canvas.width;\n    this[p.height] = canvas.height;\n\n    this[p.styleColor] = '#000';\n    this[p.styleWidth] = 2;\n\n    this[p.currentPoint] = { x: 0, y: 0 };\n    this[p.previousPoint] = { x: 0, y: 0 };\n    this[p.flag] = false;\n\n    canvas.addEventListener('mousemove', (e) => this[p.findXY]('move', e));\n    canvas.addEventListener('mousedown', (e) => this[p.findXY]('down', e));\n    canvas.addEventListener('mouseup', (e) => this[p.findXY]('up', e));\n    canvas.addEventListener('mouseout', (e) => this[p.findXY]('out', e));\n\n    Object.seal(this);\n  }\n\n  setStyle(color, width) {\n    if (!color) {\n      throw new Error('Color should a valid non-empty HEX color string!');\n    }\n\n    if (!Number.isInteger(width) || width < 0) {\n      throw Error('Width should a valid positive integer!');\n    }\n\n    this[p.styleColor] = color;\n    this[p.styleWidth] = width;\n  }\n\n  clear() {\n    this[p.context].clearRect(0, 0, this[p.width], this[p.height]);\n  }\n\n  [p.findXY](res, e) {\n    //const canvas = this[p.canvas];\n\n    //let x, y;\n    /*if (e.layerX || e.layerX === 0) {\n      x = e.layerX;\n      y = e.layerY;\n    } else if (e.offsetX || e.offsetX === 0) {*/\n      const x = e.offsetX;\n      const y = e.offsetY;\n\n    //}\n\n    if (res === 'down') {\n      console.log(`e.offsetX: ${e.offsetX}, e.offsetY: ${e.offsetY}`);\n      this[p.previousPoint] = this[p.currentPoint];\n      this[p.currentPoint] = {x, y};\n      //  x: x, //e.clientX - canvas.offsetLeft,\n      //  y: y//e.clientY - canvas.offsetTop\n      //};\n\n      this[p.flag] = true;\n\n      const context = this[p.context];\n      context.beginPath();\n      context.fillStyle = this[p.styleColor];\n      context.fillRect(\n        this[p.currentPoint].x, this[p.currentPoint].y, this[p.styleWidth],\n        this[p.styleWidth]\n      );\n      context.closePath();\n    } else if (res === 'up' || res === 'out') {\n      this[p.flag] = false;\n    } else if (res === 'move' && this[p.flag]) {\n      this[p.previousPoint] = this[p.currentPoint];\n      this[p.currentPoint] = {x, y};\n      //  x: x,//e.clientX - canvas.offsetLeft,\n      //  y: y//e.clientY - canvas.offsetTop\n      // };\n\n      this[p.draw]();\n    }\n  }\n\n  [p.draw]() {\n    const context = this[p.context];\n\n    context.beginPath();\n    context.moveTo(this[p.previousPoint].x, this[p.previousPoint].y);\n    context.lineTo(this[p.currentPoint].x, this[p.currentPoint].y);\n    context.strokeStyle = this[p.styleColor];\n    context.lineWidth = this[p.styleWidth];\n    context.stroke();\n    context.closePath();\n  }\n}\n"],"names":["addSample","sampleBlob","sampleId","sampleIds","currentSampleIndex","sampleContainer","document","createElement","classList","id","samplePreview","src","window","URL","createObjectURL","recognizeButton","type","textContent","dataset","kind","sampleActions","RECOGNIZE","repeatButton","REPEAT","appendChild","set","image","text","getSampleCanvas","sample","defer","Defer","onload","canvasContext","blobRendererComponent","getContext","clearRect","Number","getAttribute","setAttribute","blobLoaderComponent","width","height","drawImage","resolve","onerror","e","reject","promise","addSampleFromURL","url","fetch","catch","warn","proxyURL","headers","Headers","append","then","response","blob","error","addSampleFromHash","location","hash","length","slice","trim","p","Object","freeze","Symbol","Promise","this","value","VideoManager","getMediaStream","video","audio","undefined","navigator","mediaDevices","getUserMedia","getUserMediaOld","stream","log","err","constraints","webkitGetUserMedia","mozGetUserMedia","call","Error","TextRecognizer","apikey","language","detectOrientation","apiURL","apiKey","recognize","imageBlob","formData","FormData","json","setAPIKey","SpeechSynthesizer","pitch","rate","synthesis","speechSynthesis","seal","speak","utterance","SpeechSynthesisUtterance","voice","getPreferredVoice","lang","allVoices","getVoices","voices","filter","startsWith","femaleVoices","name","indexOf","LANGUAGES","Map","orientation","UnknonwThingRecognizer","synthesizer","canDescribe","describe","textMetadata","textCanvas","numberOfTextRegions","regions","horizontalDimension","verticalDimension","context","translate","textAngle","LEFT","RIGHT","DOWN","rotate","Math","PI","lineWidth","strokeStyle","get","i","region","lines","l","line","sentence","words","reduce","word","boundingBox","split","map","dimension","rect","stroke","DEFAULT_VOICE_PITCH","DEFAULT_VOICE_RATE","ThingDescriber","describers","UnknownThingDescriber","describer","LocalStorage","isSupported","self","localStorage","isInteger","getAll","storeKey","serializedStore","getItem","Array","from","JSON","parse","values","getByKey","itemKey","store","has","itemData","setItem","stringify","entries","remove","delete","clear","removeItem","clearAll","db","InMemoryStorage","Painter","canvas","styleColor","styleWidth","currentPoint","x","y","previousPoint","flag","addEventListener","_this","findXY","setStyle","color","res","offsetX","offsetY","beginPath","fillStyle","fillRect","closePath","draw","moveTo","lineTo","canPlayDefer","videoManager","thingDescriber","textRecognizer","storage","samples","Uint32Array","crypto","getRandomValues","apiKeyComponent","querySelector","samplesListComponent","target","nodeName","toUpperCase","parseInt","buttonKind","container","getElementById","add","toBlob","videoPreviewComponent","play","videoWidth","videoHeight","shotButton","clientWidth","clientHeight","removeAttribute","urlProviderURL","urlProviderSubmit","sampleURL","localFileProviderPath","localFileProviderUpload","file","files","click","manualSampleCanvas","manualSampleColorPicker","manualSampleWidth","manualSampleClearButton","manualSampleSubmit","painter"],"mappings":"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","sourceRoot":"/source/"}