{"version":3,"file":"app.js","sources":["app.js","defer.js","video-manager.js","text-recognizer.js","speech-synthesizer.js","text-reader.js","local-storage.js","in-memory-storage.js"],"sourcesContent":["import Defer from './defer';\nimport VideoManager from './video-manager';\nimport TextRecognizer from './text-recognizer';\nimport TextReader from './text-reader';\nimport LocalStorage from './local-storage';\nimport InMemoryStorage from './in-memory-storage';\n\nconst canPlayDefer = new Defer();\nconst videoManager = new VideoManager();\nconst textReader = new TextReader();\nconst textRecognizer = new TextRecognizer();\nconst storage = LocalStorage.isSupported() ?\n  new LocalStorage() : new InMemoryStorage();\n\nconst samples = new Map();\n\nconst sampleIds = new Uint32Array(100);\nwindow.crypto.getRandomValues(sampleIds);\nlet currentSampleIndex = 0;\n\nconst apiKeyComponent = document.querySelector('.access__api-key');\n\napiKeyComponent.addEventListener('change', () => {\n  storage.set('access', 'api-key', apiKeyComponent.value);\n  textRecognizer.setAPIKey(apiKeyComponent.value);\n});\n\nstorage.getByKey('access', 'api-key').catch((e) => {\n  console.warn('Could not retrieve API key from the storage', e);\n  return '';\n}).then((apiKey) => {\n  apiKeyComponent.value = apiKey;\n  textRecognizer.setAPIKey(apiKey);\n});\nconst samplesListComponent = document.querySelector('.samples-list');\n\nsamplesListComponent.addEventListener('click', (e) => {\n  if (!apiKeyComponent.value) {\n    alert('Please provide Microsoft Vision API key.');\n    return;\n  }\n\n  const sampleId = e.target.dataset.sampleId;\n  if (e.target.nodeName.toUpperCase() !== 'BUTTON' || !sampleId) {\n    return;\n  }\n\n  const sample = samples.get(Number.parseInt(sampleId));\n\n  if (e.target.dataset.isRecognize) {\n    textRecognizer.recognize(sample.image).then((data) => {\n      console.log('Success: %o', data);\n\n      sample.text = data;\n      samples.set(sample.id, sample);\n\n      textReader.read(data);\n\n      const container = document.getElementById(sample.id);\n      container.classList.add('sample__container--recognized');\n    }).catch((err) => {\n      console.error('Failure %o', err);\n    });\n  } else {\n    textReader.read(sample.text);\n  }\n});\n\nconst videoPreviewComponent = document.querySelector('.video__preview');\n\nconst videoShotPreviewRendererComponent = document.querySelector(\n    '.video__shot-preview-renderer'\n);\nconst context = videoShotPreviewRendererComponent.getContext('2d');\ncontext.fillStyle = '#aaa';\ncontext.fillRect(\n    0,\n    0,\n    videoShotPreviewRendererComponent.width,\n    videoShotPreviewRendererComponent.height\n);\n\nvideoManager.getMediaStream().then((stream) => {\n  videoPreviewComponent.src = window.URL.createObjectURL(stream);\n  videoPreviewComponent.play();\n\n  videoPreviewComponent.addEventListener('loadedmetadata', () => {\n    const width = 320;\n    let height = videoPreviewComponent.videoHeight /\n        (videoPreviewComponent.videoWidth / width);\n\n    // Firefox currently has a bug where the height can't be read from\n    // the video, so we will make assumptions if this happens.\n    if (isNaN(height)) {\n      height = width / (4 / 3);\n    }\n\n    videoPreviewComponent.setAttribute('width', width);\n    videoPreviewComponent.setAttribute('height', height);\n\n    videoShotPreviewRendererComponent.setAttribute('width', width);\n    videoShotPreviewRendererComponent.setAttribute('height', height);\n\n    canPlayDefer.resolve({ width, height });\n  }, false);\n}).catch((err) => {\n  canPlayDefer.reject(err);\n});\n\nfunction addSample(sampleBlob) {\n  const sampleId = sampleIds[currentSampleIndex++];\n\n  const sampleContainer = document.createElement('div');\n  sampleContainer.classList = 'sample__container';\n  sampleContainer.id = sampleId;\n\n  const samplePreview = document.createElement('img');\n  samplePreview.classList = 'sample__preview';\n  samplePreview.src = window.URL.createObjectURL(sampleBlob);\n\n  const recognizeButton = document.createElement('button');\n  recognizeButton.type = 'button';\n  recognizeButton.textContent = 'Recognize';\n  recognizeButton.classList = 'sample__recognize-button';\n  recognizeButton.dataset.sampleId = sampleId;\n  recognizeButton.dataset.isRecognize = true;\n\n  const repeatButton = document.createElement('button');\n  repeatButton.type = 'button';\n  repeatButton.textContent = 'Repeat text';\n  repeatButton.classList = 'sample__repeat-button';\n  repeatButton.dataset.sampleId = sampleId;\n\n  sampleContainer.appendChild(samplePreview);\n  sampleContainer.appendChild(recognizeButton);\n  sampleContainer.appendChild(repeatButton);\n\n  samplesListComponent.appendChild(sampleContainer);\n\n  samples.set(sampleId, { id: sampleId, image: sampleBlob, text: null });\n}\n\n/** Sample Camera provider **/\n\nconst shotButton = document.querySelector('.video__shot-button');\nshotButton.setAttribute('disabled', 'disabled');\nshotButton.addEventListener('click', () => {\n  videoShotPreviewRendererComponent.getContext('2d').drawImage(\n    videoPreviewComponent, 0, 0,\n    Number(videoPreviewComponent.getAttribute('width')),\n    Number(videoPreviewComponent.getAttribute('height'))\n  );\n\n  videoShotPreviewRendererComponent.toBlob((imageBlob) => {\n    addSample(imageBlob);\n  });\n});\n\ncanPlayDefer.promise.then(() => {\n  shotButton.removeAttribute('disabled');\n});\n\n/** End of Sample Camera provider **/\n\n\n/** Sample URL provider **/\nconst urlProviderURL = document.querySelector('.sample-url-provider__url');\nconst urlProviderSubmit = document.querySelector(\n  '.sample-url-provider__submit'\n);\n\nurlProviderSubmit.addEventListener('click', () => {\n  const sampleURL = urlProviderURL.value;\n  if (!sampleURL) {\n    alert('Please provide a valid image URL!');\n    return;\n  }\n\n  return fetch(sampleURL).then((response) => {\n    return response.blob();\n  }).then((blob) => {\n    addSample(blob);\n  }).catch((e) => {\n    console.error('Failed to add sample from URL: ', e);\n    alert('Failed to add sample! See log for more details...');\n  });\n});\n\n\n/** End of Sample URL provider **/\n\n\n/** Sample Local File provider **/\n\nconst localFileProviderPath = document.querySelector(\n  '.local-file-provider__path'\n);\n\nconst localFileProviderUpload = document.querySelector(\n  '.local-file-provider__upload'\n);\n\nlocalFileProviderPath.addEventListener('change', (e) => {\n  for (const file of e.target.files) {\n    addSample(file);\n  }\n});\n\nlocalFileProviderUpload.addEventListener('click', () => {\n  localFileProviderPath.click();\n});\n\n/** End of Sample URL provider **/\n","'use strict';\n\nconst p = Object.freeze({\n  promise: Symbol('promise'),\n  resolve: Symbol('resolve'),\n  reject: Symbol('reject'),\n});\n\n/**\n * Instance of the Defer class is just a handy wrapper around native Promise\n * object intended to provide dedicated 'resolve' and 'reject' methods.\n */\nexport default class Defer {\n  constructor() {\n    this[p.promise] = new Promise((resolve, reject) => {\n      this[p.resolve] = resolve;\n      this[p.reject] = reject;\n    });\n\n    Object.freeze(this);\n  }\n\n  /**\n   * Actual promise instance.\n   *\n   * @return {Promise}\n   */\n  get promise() {\n    return this[p.promise];\n  }\n\n  /**\n   * Resolves promise with the specified value.\n   *\n   * @param {*=} value Optional value to resolve promise with.\n   */\n  resolve(value) {\n    this[p.resolve](value);\n  }\n\n  /**\n   * Rejects promise with the specified error.\n   *\n   * @param {*=} error Error to reject promise with.\n   */\n  reject(error) {\n    this[p.reject](error);\n  }\n}\n","export default class VideoManager {\n  getMediaStream(video = true, audio = false) {\n    return navigator.mediaDevices.getUserMedia({ audio, video }).then(\n      (stream) => {\n        console.log('[VideoManager]: Media stream is available.');\n\n        return stream;\n      }\n    ).catch((err) => {\n      console.error('[VideoManager]: Media stream is not available.', err);\n\n      throw err;\n    });\n  }\n}\n","const p = Object.freeze({\n  // Properties\n  apiURL: Symbol('apiURL'),\n  apiKey: Symbol('apiKey')\n});\n\nexport default class TextRecognizer {\n  constructor(apikey = '', language = 'unk', detectOrientation = true) {\n    this[p.apiURL] = 'https://api.projectoxford.ai/vision/v1.0/ocr?' +\n        `language=${language}&detectOrientation=${detectOrientation}`;\n    this[p.apiKey] = apikey;\n  }\n\n  recognize(imageBlob) {\n    const headers = new Headers();\n    headers.append('Ocp-Apim-Subscription-Key', this[p.apiKey]);\n\n    const formData = new FormData();\n    formData.append('image', imageBlob, 'image.png');\n\n    return fetch(this[p.apiURL], {\n      method: 'POST',\n      headers,\n      body: formData\n    }).then((response) => response.json());\n  }\n\n  setAPIKey(apiKey) {\n    this[p.apiKey] = apiKey;\n  }\n}\n","const p = Object.freeze({\n  pitch: Symbol('pitch'),\n  rate: Symbol('rate'),\n  synthesis: Symbol('synthesis'),\n\n  // Methods\n  getPreferredVoice: Symbol('getPreferredVoice'),\n});\n\nexport default class SpeechSynthesizer {\n  constructor(pitch, rate) {\n    this[p.pitch] = pitch;\n    this[p.rate] = rate;\n    this[p.synthesis] = window.speechSynthesis || null;\n\n    Object.seal(this);\n  }\n\n  /**\n   * Speak a text aloud.\n   *\n   * @param {string} text\n   * @param {string} language\n   */\n  speak(text = '', language = 'en') {\n    const synthesis = this[p.synthesis];\n    if (!text || !synthesis) {\n      return;\n    }\n\n    const utterance = new SpeechSynthesisUtterance(text);\n\n    const voice = this[p.getPreferredVoice](language);\n    if (voice) {\n      utterance.voice = voice;\n    }\n\n    utterance.lang = language;\n    utterance.pitch = this[p.pitch];\n    utterance.rate = this[p.rate];\n\n    synthesis.speak(utterance);\n  }\n\n  /**\n   * From all the voices available, set the default language to English with a\n   * female voice if available.\n   *\n   * @param {string} language\n   *\n   * @returns {Object}\n   */\n  [p.getPreferredVoice](language) {\n    const allVoices = this[p.synthesis].getVoices();\n    if (!allVoices.length) {\n      return null;\n    }\n\n    const voices = allVoices.filter((voice) => voice.lang.startsWith(language));\n    const femaleVoices = voices.filter(\n      (voice) => voice.name.includes('Female')\n    );\n\n    if (femaleVoices.length) {\n      return femaleVoices[0];\n    }\n\n    if (voices.length) {\n      return voices[0];\n    }\n\n    // If we can't find any voice for the language let's fallback to English.\n    if (!language.startsWith('en')) {\n      return this[p.getPreferredVoice]('en');\n    }\n\n    return null;\n  }\n}\n","import SpeechSynthesizer from './speech-synthesizer';\n\nconst LANGUAGES = new Map([\n  ['unk', 'Unknown'],\n  ['ar', 'Arabic'],\n  ['zh-Hans', 'Simplified Chinese'],\n  ['zh-Hant', 'Traditional Chinese'],\n  ['cs', 'Czech'],\n  ['da', 'Danish'],\n  ['nl', 'Dutch'],\n  ['en', 'English'],\n  ['fi', 'Finnish'],\n  ['fr', 'French'],\n  ['de', 'German'],\n  ['el', 'Greek'],\n  ['hu', 'Hungarian'],\n  ['it', 'Italian'],\n  ['ja', 'Japanese'],\n  ['ko', 'Korean'],\n  ['nb', 'Norwegian'],\n  ['pl', 'Polish'],\n  ['pt', 'Portuguese'],\n  ['ru', 'Russian'],\n  ['es', 'Spanish'],\n  ['sv', 'Swedish'],\n  ['tr', 'Turkish']\n]);\n\nconst p = Object.freeze({\n  synthesizer: Symbol('synthesizer')\n});\n\nconst DEFAULT_VOICE_PITCH = 0.8;\nconst DEFAULT_VOICE_RATE = 0.9;\n\nexport default class TextReader {\n  constructor(pitch = DEFAULT_VOICE_PITCH, rate = DEFAULT_VOICE_RATE) {\n    this[p.synthesizer] = new SpeechSynthesizer(pitch, rate);\n  }\n\n  read(textDescription) {\n    const numberOfTextRegions = textDescription.regions.length;\n    const synthesizer = this[p.synthesizer];\n\n    if (numberOfTextRegions === 0) {\n      synthesizer.speak('Sorry! I did not recognize any text.');\n      return;\n    }\n\n    if (numberOfTextRegions === 1) {\n      synthesizer.speak('I see just one region of text.');\n    } else {\n      synthesizer.speak(`I see ${numberOfTextRegions} regions of text.`);\n    }\n\n    const language = textDescription.language;\n\n    if (!language || language === 'unk') {\n      synthesizer.speak('I can not recognize the language.');\n    } else {\n      synthesizer.speak(\n        `I think this is ${LANGUAGES.get(language)} language.`\n      );\n    }\n\n    if (textDescription.textAngle < 5) {\n      synthesizer.speak('Text is almost perfectly aligned!');\n    } else {\n      synthesizer.speak('Text is skewed a bit');\n    }\n\n    for (let i = 0; i < numberOfTextRegions; i++) {\n      const region = textDescription.regions[i];\n      synthesizer.speak(\n        `Region number ${i + 1} consists of ` +\n        `${region.lines.length} lines of text.`\n      );\n\n      for (let l = 0; l < region.lines.length; l++) {\n        const line = region.lines[l];\n        synthesizer.speak(\n          `Let me read words from the line number ${l + 1}:`\n        );\n\n        for (let w = 0; w < line.words.length; w++) {\n          synthesizer.speak(line.words[w].text, language);\n        }\n      }\n\n    }\n  }\n}\n","'use strict';\n\nexport default class LocalStorage {\n  static isSupported() {\n    try {\n      return !!self.localStorage && Number.isInteger(self.localStorage.length);\n    } catch(e) {\n      return false;\n    }\n  }\n\n  /**\n   * Gets all items from the specified store.\n   *\n   * @param {string} storeKey Key of the store to retrieve all items from.\n   * @return {Promise.<Array>}\n   */\n  getAll(storeKey) {\n    const serializedStore = localStorage.getItem(storeKey);\n\n    return Promise.resolve(\n      serializedStore ?\n        Array.from((new Map(JSON.parse(serializedStore))).values()) : []\n    );\n  }\n\n  /**\n   * Returns single item from the store by item's key.\n   *\n   * @param {string} storeKey Key of the store to retrieve item from.\n   * @param {string} itemKey Key of the item to retrieve.\n   * @return {*}\n   */\n  getByKey(storeKey, itemKey) {\n    const serializedStore = localStorage.getItem(storeKey);\n    const store = new Map(serializedStore ? JSON.parse(serializedStore) : []);\n\n    if (!store.has(itemKey)) {\n      return Promise.reject(\n        new Error(`There is no item (${itemKey}) in the store (${storeKey}).`)\n      );\n    }\n\n    return Promise.resolve(store.get(itemKey));\n  }\n\n  /**\n   * Adds/updates item to/in specified store.\n   *\n   * @param {string} storeKey Key of the store to save item to.\n   * @param {string} itemKey Key of the item to save.\n   * @param {*} itemData Item data to save.\n   * @return {Promise}\n   */\n  set(storeKey, itemKey, itemData) {\n    const serializedStore = localStorage.getItem(storeKey);\n\n    const store = new Map(serializedStore ? JSON.parse(serializedStore) : []);\n    store.set(itemKey, itemData);\n\n    localStorage.setItem(storeKey, JSON.stringify(Array.from(store.entries())));\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Removes item from the specified store.\n   *\n   * @param {string} storeKey Key of the store to remove item from.\n   * @param {string} itemKey Key of the item to remove.\n   * @return {Promise}\n   */\n  remove(storeKey, itemKey) {\n    const serializedStore = localStorage.getItem(storeKey);\n\n    if (serializedStore) {\n      const store = new Map(JSON.parse(serializedStore));\n      store.delete(itemKey);\n\n      localStorage.setItem(\n        storeKey, JSON.stringify(Array.from(store.entries()))\n      );\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Entirely clears specified store.\n   *\n   * @param {string} storeKey Key of the store to clear.\n   * @return {Promise}\n   */\n  clear(storeKey) {\n    localStorage.removeItem(storeKey);\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Clears all available stores.\n   *\n   * @return {Promise}\n   */\n  clearAll() {\n    localStorage.clear();\n    return Promise.resolve();\n  }\n}\n","'use strict';\n\nconst p = Object.freeze({ db: Symbol('db') });\n\nexport default class InMemoryStorage {\n  constructor() {\n    this[p.db] = new Map();\n  }\n\n  /**\n   * Gets all items from the specified store.\n   *\n   * @param {string} storeKey Key of the store to retrieve all items from.\n   * @return {Promise.<Array>}\n   */\n  getAll(storeKey) {\n    const store = this[p.db].get(storeKey);\n\n    return Promise.resolve(store ? Array.from(store.values()) : []);\n  }\n\n  /**\n   * Returns single item from the specified store by item's key.\n   *\n   * @param {string} storeKey Key of the store to retrieve item from.\n   * @param {string} itemKey Key of the item to retrieve.\n   * @return {*}\n   */\n  getByKey(storeKey, itemKey) {\n    const store = this[p.db].get(storeKey);\n\n    if (!store || store.has(itemKey)) {\n      return Promise.reject(\n        new Error(`There is no item (${itemKey}) in the store (${storeKey}).`)\n      );\n    }\n\n    return Promise.resolve(store.get(itemKey));\n  }\n\n  /**\n   * Adds/updates item to/in specified store.\n   *\n   * @param {string} storeKey Key of the store to save item to.\n   * @param {string} itemKey Key of the item to save.\n   * @param {*} itemData Item data to save.\n   * @return {Promise}\n   */\n  set(storeKey, itemKey, itemData) {\n    let store = this[p.db].get(storeKey);\n\n    if (!store) {\n      this[p.db].set(storeKey, (store = new Map()));\n    }\n\n    store.set(itemKey, itemData);\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Removes item from the specified store.\n   *\n   * @param {string} storeKey Key of the store to remove item from.\n   * @param {string} itemKey Key of the item to remove.\n   * @return {Promise}\n   */\n  remove(storeKey, itemKey) {\n    const store = this[p.db].get(storeKey);\n\n    if (store) {\n      store.delete(itemKey);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Entirely clears specified store.\n   *\n   * @param {string} storeKey Key of the store to clear.\n   * @return {Promise}\n   */\n  clear(storeKey) {\n    const store = this[p.db].get(storeKey);\n\n    if (store) {\n      store.clear();\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Clears all available stores.\n   *\n   * @return {Promise}\n   */\n  clearAll() {\n    this[p.db].clear();\n    return Promise.resolve();\n  }\n}\n"],"names":["addSample","sampleBlob","sampleId","sampleIds","currentSampleIndex","sampleContainer","document","createElement","classList","id","samplePreview","src","window","URL","createObjectURL","recognizeButton","type","textContent","dataset","isRecognize","repeatButton","appendChild","set","image","text","p","Object","freeze","Symbol","Defer","promise","Promise","resolve","reject","this","value","error","VideoManager","getMediaStream","video","audio","navigator","mediaDevices","getUserMedia","then","stream","log","catch","err","TextRecognizer","apikey","language","detectOrientation","apiURL","apiKey","recognize","imageBlob","headers","Headers","append","formData","FormData","fetch","response","json","setAPIKey","SpeechSynthesizer","pitch","rate","synthesis","speechSynthesis","seal","speak","utterance","SpeechSynthesisUtterance","voice","getPreferredVoice","lang","allVoices","getVoices","length","voices","filter","startsWith","femaleVoices","name","indexOf","LANGUAGES","Map","DEFAULT_VOICE_PITCH","DEFAULT_VOICE_RATE","TextReader","synthesizer","read","textDescription","numberOfTextRegions","regions","get","textAngle","i","region","lines","l","line","w","words","LocalStorage","isSupported","self","localStorage","Number","isInteger","e","getAll","storeKey","serializedStore","getItem","Array","from","JSON","parse","values","getByKey","itemKey","store","has","Error","itemData","setItem","stringify","entries","remove","delete","clear","removeItem","clearAll","db","InMemoryStorage","canPlayDefer","videoManager","textReader","textRecognizer","storage","samples","Uint32Array","crypto","getRandomValues","apiKeyComponent","querySelector","addEventListener","warn","samplesListComponent","target","nodeName","toUpperCase","sample","parseInt","data","container","getElementById","add","videoPreviewComponent","videoShotPreviewRendererComponent","context","getContext","fillStyle","fillRect","width","height","play","videoHeight","videoWidth","isNaN","setAttribute","shotButton","drawImage","getAttribute","toBlob","removeAttribute","urlProviderURL","urlProviderSubmit","sampleURL","blob","localFileProviderPath","localFileProviderUpload","file","files","click"],"mappings":"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","sourceRoot":"/source/"}