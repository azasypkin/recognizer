{"version":3,"file":"app.js","sources":["app.js","defer.js","video-manager.js","text-recognizer.js","speech-synthesizer.js","text-reader.js","local-storage.js","in-memory-storage.js","painter.js"],"sourcesContent":["import Defer from './defer';\nimport VideoManager from './video-manager';\nimport TextRecognizer from './text-recognizer';\nimport TextReader from './text-reader';\nimport LocalStorage from './local-storage';\nimport InMemoryStorage from './in-memory-storage';\nimport Painter from './painter';\n\nconst sampleActions = Object.freeze({\n  RECOGNIZE: 'RECOGNIZE',\n  REPEAT: 'REPEAT',\n  ROTATE: 'ROTATE'\n});\n\nconst orientation = Object.freeze({\n  LEFT: 'Left',\n  RIGHT: 'Right',\n  UP: 'Up',\n  DOWN: 'Down'\n});\n\nconst canPlayDefer = new Defer();\nconst videoManager = new VideoManager();\nconst textReader = new TextReader();\nconst textRecognizer = new TextRecognizer();\nconst storage = LocalStorage.isSupported() ?\n  new LocalStorage() : new InMemoryStorage();\n\nconst samples = new Map();\n\nconst sampleIds = new Uint32Array(100);\nwindow.crypto.getRandomValues(sampleIds);\nlet currentSampleIndex = 0;\n\nconst apiKeyComponent = document.querySelector('.access__api-key');\n\napiKeyComponent.addEventListener('change', () => {\n  storage.set('access', 'api-key', apiKeyComponent.value);\n  textRecognizer.setAPIKey(apiKeyComponent.value);\n});\n\nstorage.getByKey('access', 'api-key').catch((e) => {\n  console.warn('Could not retrieve API key from the storage', e);\n  return '';\n}).then((apiKey) => {\n  apiKeyComponent.value = apiKey;\n  textRecognizer.setAPIKey(apiKey);\n});\nconst samplesListComponent = document.querySelector('.samples-list');\n\nsamplesListComponent.addEventListener('click', (e) => {\n  if (!apiKeyComponent.value) {\n    alert('Please provide Microsoft Vision API key.');\n    return;\n  }\n\n  const sampleId = e.target.dataset.sampleId;\n  if (e.target.nodeName.toUpperCase() !== 'BUTTON' || !sampleId) {\n    return;\n  }\n\n  const sample = samples.get(Number.parseInt(sampleId));\n  const buttonKind = e.target.dataset.kind;\n\n  if (buttonKind === sampleActions.RECOGNIZE) {\n    textRecognizer.recognize(sample.image).then((data) => {\n      console.log('Success: %o', data);\n\n      sample.text = data;\n      samples.set(sample.id, sample);\n\n      outlineSampleWords(sample);\n\n      textReader.read(data);\n\n      const container = document.getElementById(sample.id);\n      container.classList.add('sample__container--recognized');\n    }).catch((err) => {\n      console.error('Failure %o', err);\n    });\n  } else if (buttonKind === sampleActions.REPEAT) {\n    textReader.read(sample.text);\n  }\n});\n\nconst videoPreviewComponent = document.querySelector('.video__preview');\n\nconst blobRendererComponent = document.querySelector('.blob__renderer');\nconst blobLoaderComponent = document.querySelector('.blob__loader');\n\nconst context = blobRendererComponent.getContext('2d');\ncontext.fillStyle = '#aaa';\ncontext.fillRect(\n    0,\n    0,\n    blobRendererComponent.width,\n    blobRendererComponent.height\n);\n\nvideoManager.getMediaStream().then((stream) => {\n  videoPreviewComponent.src = window.URL.createObjectURL(stream);\n\n  videoPreviewComponent.addEventListener('loadedmetadata', () => {\n    videoPreviewComponent.play();\n\n    const width = 320;\n    let height = videoPreviewComponent.videoHeight /\n        (videoPreviewComponent.videoWidth / width);\n\n    // Firefox currently has a bug where the height can't be read from\n    // the video, so we will make assumptions if this happens.\n    if (isNaN(height)) {\n      height = width / (4 / 3);\n    }\n\n    videoPreviewComponent.setAttribute('width', width);\n    videoPreviewComponent.setAttribute('height', height);\n\n    canPlayDefer.resolve({ width, height });\n  }, false);\n}).catch((err) => {\n  canPlayDefer.reject(err);\n});\n\nfunction addSample(sampleBlob) {\n  const sampleId = sampleIds[currentSampleIndex++];\n\n  const sampleContainer = document.createElement('div');\n  sampleContainer.classList = 'sample__container';\n  sampleContainer.id = sampleId;\n\n  const samplePreview = document.createElement('img');\n  samplePreview.classList = 'sample__preview';\n  samplePreview.src = window.URL.createObjectURL(sampleBlob);\n\n  const recognizeButton = document.createElement('button');\n  recognizeButton.type = 'button';\n  recognizeButton.textContent = 'Recognize';\n  recognizeButton.classList = 'sample__recognize-button action-button';\n  recognizeButton.dataset.sampleId = sampleId;\n  recognizeButton.dataset.kind = sampleActions.RECOGNIZE;\n\n  const repeatButton = document.createElement('button');\n  repeatButton.type = 'button';\n  repeatButton.textContent = 'Repeat text';\n  repeatButton.classList = 'sample__repeat-button action-button';\n  repeatButton.dataset.sampleId = sampleId;\n  repeatButton.dataset.kind = sampleActions.REPEAT;\n\n  sampleContainer.appendChild(samplePreview);\n  sampleContainer.appendChild(recognizeButton);\n  sampleContainer.appendChild(repeatButton);\n\n  samplesListComponent.appendChild(sampleContainer);\n\n  samples.set(sampleId, { id: sampleId, image: sampleBlob, text: null });\n\n  setTimeout(() => {\n    sampleContainer.scrollIntoView();\n  }, 1000);\n}\n\nfunction outlineSampleWords(sample) {\n  blobLoaderComponent.src = window.URL.createObjectURL(sample.image);\n  blobLoaderComponent.onload = () => {\n    const canvasContext = blobRendererComponent.getContext('2d');\n\n    canvasContext.clearRect(\n      0, 0, Number(blobRendererComponent.getAttribute('width')),\n      Number(blobRendererComponent.getAttribute('height'))\n    );\n\n    blobRendererComponent.setAttribute('width', blobLoaderComponent.width);\n    blobRendererComponent.setAttribute('height', blobLoaderComponent.height);\n\n    canvasContext.drawImage(\n      blobLoaderComponent, 0, 0, blobLoaderComponent.width,\n      blobLoaderComponent.height\n    );\n\n    canvasContext.translate(\n      blobLoaderComponent.width / 2, blobLoaderComponent.height / 2\n    );\n\n    let textAngle = sample.text.textAngle;\n\n    if (sample.text.orientation === orientation.LEFT) {\n      textAngle -= 90;\n    } else if (sample.text.orientation === orientation.RIGHT) {\n      textAngle += 90;\n    } else if (sample.text.orientation === orientation.DOWN) {\n      textAngle += 180;\n    }\n\n    canvasContext.rotate(textAngle * Math.PI / 180);\n\n    for (const region of sample.text.regions) {\n      for (const line of region.lines) {\n        for (const word of line.words) {\n          const boundingBox = word.boundingBox.split(',').map((dimension) => {\n            return Number(dimension.trim());\n          });\n\n          canvasContext.rect(\n            boundingBox[0] - blobLoaderComponent.width / 2,\n            boundingBox[1] - blobLoaderComponent.height / 2,\n            boundingBox[2], boundingBox[3]\n          );\n          canvasContext.stroke();\n        }\n      }\n    }\n\n    blobRendererComponent.toBlob((imageBlob) => {\n      document.getElementById(sample.id).querySelector('img').src =\n        window.URL.createObjectURL(imageBlob);\n    });\n  };\n\n  document.body.appendChild(blobLoaderComponent);\n}\n\n/** Sample Camera provider **/\n\nconst shotButton = document.querySelector('.video__shot-button');\nshotButton.setAttribute('disabled', 'disabled');\nshotButton.addEventListener('click', () => {\n  const width = videoPreviewComponent.getAttribute('width');\n  const height = videoPreviewComponent.getAttribute('height');\n\n  blobRendererComponent.setAttribute('width', width);\n  blobRendererComponent.setAttribute('height', height);\n\n  blobRendererComponent.getContext('2d').drawImage(\n    videoPreviewComponent, 0, 0, Number(width), Number(height)\n  );\n\n  blobRendererComponent.toBlob((imageBlob) => {\n    addSample(imageBlob);\n  });\n});\n\ncanPlayDefer.promise.then(() => {\n  shotButton.removeAttribute('disabled');\n});\n\n/** End of Sample Camera provider **/\n\n\n/** Sample URL provider **/\nconst urlProviderURL = document.querySelector('.sample-url-provider__url');\nconst urlProviderSubmit = document.querySelector(\n  '.sample-url-provider__submit'\n);\nconst examplesList = document.querySelector('.sample-url-provider__examples');\n\nfunction addSampleFromURL(url) {\n  return fetch(url).catch((e) => {\n    console.warn('Can not load image directly, trying through the proxy: ', e);\n\n    const proxyURL = `https://recognizer-ocr-proxy.herokuapp.com/?${url}`;\n    const headers = new Headers();\n    headers.append('Target-URL', url);\n\n    return fetch(proxyURL, { headers });\n  }).then((response) => {\n    return response.blob();\n  }).then((blob) => {\n    addSample(blob);\n  }).catch((e) => {\n    console.error('Failed to add sample from URL: ', e);\n    alert('Failed to add sample! See log for more details...');\n  });\n}\n\nurlProviderSubmit.addEventListener('click', () => {\n  const sampleURL = urlProviderURL.value;\n  if (!sampleURL) {\n    alert('Please provide a valid image URL!');\n    return;\n  }\n\n  addSampleFromURL(sampleURL);\n});\n\nexamplesList.addEventListener('click', (e) => {\n  if (e.target.nodeName.toUpperCase() !== 'LI') {\n    return;\n  }\n\n  addSampleFromURL(e.target.textContent.trim());\n});\n\n\n/** End of Sample URL provider **/\n\n\n/** Sample Local File provider **/\n\nconst localFileProviderPath = document.querySelector(\n  '.local-file-provider__path'\n);\n\nconst localFileProviderUpload = document.querySelector(\n  '.local-file-provider__upload'\n);\n\nlocalFileProviderPath.addEventListener('change', (e) => {\n  for (const file of e.target.files) {\n    addSample(file);\n  }\n});\n\nlocalFileProviderUpload.addEventListener('click', () => {\n  localFileProviderPath.click();\n});\n\n/** End of Sample URL provider **/\n\n\n/** Manual Sample provider **/\nconst manualSampleCanvas = document.querySelector(\n  '.manual-sample-provider__canvas'\n);\n\nconst manualSampleColorPicker = document.querySelector(\n  '.manual-sample-provider__color-picker'\n);\n\nconst manualSampleWidth = document.querySelector(\n  '.manual-sample-provider__width'\n);\n\nconst manualSampleClearButton = document.querySelector(\n  '.manual-sample-provider__clear-button'\n);\n\nconst manualSampleSubmit = document.querySelector(\n  '.manual-sample-provider__submit'\n);\n\nconst painter = new Painter(manualSampleCanvas);\n\nmanualSampleColorPicker.addEventListener('change', () => {\n  painter.setStyle(\n    manualSampleColorPicker.value,\n    Number(manualSampleWidth.value)\n  );\n});\n\nmanualSampleWidth.addEventListener('change', () => {\n  painter.setStyle(\n    manualSampleColorPicker.value,\n    Number(manualSampleWidth.value)\n  );\n});\n\nmanualSampleClearButton.addEventListener('click', () => {\n  painter.clear();\n});\n\nmanualSampleSubmit.addEventListener('click', () => {\n  manualSampleCanvas.toBlob((imageBlob) => addSample(imageBlob));\n});\n\n/** End of Manual Sample provider **/\n","'use strict';\n\nconst p = Object.freeze({\n  promise: Symbol('promise'),\n  resolve: Symbol('resolve'),\n  reject: Symbol('reject'),\n});\n\n/**\n * Instance of the Defer class is just a handy wrapper around native Promise\n * object intended to provide dedicated 'resolve' and 'reject' methods.\n */\nexport default class Defer {\n  constructor() {\n    this[p.promise] = new Promise((resolve, reject) => {\n      this[p.resolve] = resolve;\n      this[p.reject] = reject;\n    });\n\n    Object.freeze(this);\n  }\n\n  /**\n   * Actual promise instance.\n   *\n   * @return {Promise}\n   */\n  get promise() {\n    return this[p.promise];\n  }\n\n  /**\n   * Resolves promise with the specified value.\n   *\n   * @param {*=} value Optional value to resolve promise with.\n   */\n  resolve(value) {\n    this[p.resolve](value);\n  }\n\n  /**\n   * Rejects promise with the specified error.\n   *\n   * @param {*=} error Error to reject promise with.\n   */\n  reject(error) {\n    this[p.reject](error);\n  }\n}\n","const p = Object.freeze({\n  getUserMediaOld: Symbol('getUserMediaOld')\n});\n\nexport default class VideoManager {\n  getMediaStream(video = true, audio = false) {\n    // Older browsers might not implement mediaDevices at all, so we set an\n    // empty object first.\n    if(navigator.mediaDevices === undefined) {\n      navigator.mediaDevices = {};\n    }\n\n    // Some browsers partially implement mediaDevices. We can't just assign an\n    // object with getUserMedia as it would overwrite existing properties. Here,\n    // we will just add the getUserMedia property if it's missing.\n    if(navigator.mediaDevices.getUserMedia === undefined) {\n      navigator.mediaDevices.getUserMedia = this[p.getUserMediaOld];\n    }\n\n    return navigator.mediaDevices.getUserMedia({\n      audio,\n      video: video ? { facingMode: { exact: 'environment' } } : false }\n    ).then(\n      (stream) => {\n        console.log('[VideoManager]: Media stream is available.');\n\n        return stream;\n      }\n    ).catch((err) => {\n      console.error('[VideoManager]: Media stream is not available.', err);\n\n      throw err;\n    });\n  }\n\n  [p.getUserMediaOld](constraints) {\n    const getUserMedia = (navigator.getUserMedia ||\n      navigator.webkitGetUserMedia || navigator.mozGetUserMedia);\n\n    // Some browsers just don't implement it - return a rejected promise with an\n    // error to keep a consistent interface.\n    if(!getUserMedia) {\n      return Promise.reject(\n        new Error('getUserMedia is not implemented in this browser')\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  }\n}\n","const p = Object.freeze({\n  // Properties\n  apiURL: Symbol('apiURL'),\n  apiKey: Symbol('apiKey')\n});\n\nexport default class TextRecognizer {\n  constructor(apikey = '', language = 'unk', detectOrientation = true) {\n    this[p.apiURL] = 'https://api.projectoxford.ai/vision/v1.0/ocr?' +\n        `language=${language}&detectOrientation=${detectOrientation}`;\n    this[p.apiKey] = apikey;\n  }\n\n  recognize(imageBlob) {\n    const headers = new Headers();\n    headers.append('Ocp-Apim-Subscription-Key', this[p.apiKey]);\n\n    const formData = new FormData();\n    formData.append('image', imageBlob, 'image.png');\n\n    return fetch(this[p.apiURL], {\n      method: 'POST',\n      headers,\n      body: formData\n    }).then((response) => response.json());\n  }\n\n  setAPIKey(apiKey) {\n    this[p.apiKey] = apiKey;\n  }\n}\n","const p = Object.freeze({\n  pitch: Symbol('pitch'),\n  rate: Symbol('rate'),\n  synthesis: Symbol('synthesis'),\n\n  // Methods\n  getPreferredVoice: Symbol('getPreferredVoice'),\n});\n\nexport default class SpeechSynthesizer {\n  constructor(pitch, rate) {\n    this[p.pitch] = pitch;\n    this[p.rate] = rate;\n    this[p.synthesis] = window.speechSynthesis || null;\n\n    Object.seal(this);\n  }\n\n  /**\n   * Speak a text aloud.\n   *\n   * @param {string} text\n   * @param {string} language\n   */\n  speak(text = '', language = 'en') {\n    const synthesis = this[p.synthesis];\n    if (!text || !synthesis) {\n      return;\n    }\n\n    const utterance = new SpeechSynthesisUtterance(text);\n\n    const voice = this[p.getPreferredVoice](language);\n    if (voice) {\n      utterance.voice = voice;\n    }\n\n    utterance.lang = language;\n    utterance.pitch = this[p.pitch];\n    utterance.rate = this[p.rate];\n\n    synthesis.speak(utterance);\n  }\n\n  /**\n   * From all the voices available, set the default language to English with a\n   * female voice if available.\n   *\n   * @param {string} language\n   *\n   * @returns {Object}\n   */\n  [p.getPreferredVoice](language) {\n    const allVoices = this[p.synthesis].getVoices();\n    if (!allVoices.length) {\n      return null;\n    }\n\n    const voices = allVoices.filter((voice) => voice.lang.startsWith(language));\n    const femaleVoices = voices.filter(\n      (voice) => voice.name.includes('Female')\n    );\n\n    if (femaleVoices.length) {\n      return femaleVoices[0];\n    }\n\n    if (voices.length) {\n      return voices[0];\n    }\n\n    // If we can't find any voice for the language let's fallback to English.\n    if (!language.startsWith('en')) {\n      return this[p.getPreferredVoice]('en');\n    }\n\n    return null;\n  }\n}\n","import SpeechSynthesizer from './speech-synthesizer';\n\nconst LANGUAGES = new Map([\n  ['unk', 'Unknown'],\n  ['ar', 'Arabic'],\n  ['zh-Hans', 'Simplified Chinese'],\n  ['zh-Hant', 'Traditional Chinese'],\n  ['cs', 'Czech'],\n  ['da', 'Danish'],\n  ['nl', 'Dutch'],\n  ['en', 'English'],\n  ['fi', 'Finnish'],\n  ['fr', 'French'],\n  ['de', 'German'],\n  ['el', 'Greek'],\n  ['hu', 'Hungarian'],\n  ['it', 'Italian'],\n  ['ja', 'Japanese'],\n  ['ko', 'Korean'],\n  ['nb', 'Norwegian'],\n  ['pl', 'Polish'],\n  ['pt', 'Portuguese'],\n  ['ru', 'Russian'],\n  ['es', 'Spanish'],\n  ['sv', 'Swedish'],\n  ['tr', 'Turkish']\n]);\n\nconst p = Object.freeze({\n  synthesizer: Symbol('synthesizer')\n});\n\nconst DEFAULT_VOICE_PITCH = 0.8;\nconst DEFAULT_VOICE_RATE = 0.9;\n\nexport default class TextReader {\n  constructor(pitch = DEFAULT_VOICE_PITCH, rate = DEFAULT_VOICE_RATE) {\n    this[p.synthesizer] = new SpeechSynthesizer(pitch, rate);\n  }\n\n  read(textDescription) {\n    const numberOfTextRegions = textDescription.regions.length;\n    const synthesizer = this[p.synthesizer];\n\n    if (numberOfTextRegions === 0) {\n      synthesizer.speak('Sorry! I did not recognize any text.');\n      return;\n    }\n\n    if (numberOfTextRegions === 1) {\n      synthesizer.speak('I see just one region of text.');\n    } else {\n      synthesizer.speak(`I see ${numberOfTextRegions} regions of text.`);\n    }\n\n    const language = textDescription.language;\n\n    if (!language || language === 'unk') {\n      synthesizer.speak('I can not recognize the language.');\n    } else {\n      synthesizer.speak(\n        `I think this is ${LANGUAGES.get(language)} language.`\n      );\n    }\n\n    if (textDescription.textAngle < 5) {\n      synthesizer.speak('Text is almost perfectly aligned!');\n    } else {\n      synthesizer.speak('Text is skewed a bit');\n    }\n\n    for (let i = 0; i < numberOfTextRegions; i++) {\n      const region = textDescription.regions[i];\n      synthesizer.speak(\n        `Region number ${i + 1} consists of ` +\n        `${region.lines.length} lines of text.`\n      );\n\n      for (let l = 0; l < region.lines.length; l++) {\n        const line = region.lines[l];\n        synthesizer.speak(\n          `Let me read words from the line number ${l + 1}:`\n        );\n\n        const sentence = line.words.reduce((sentence, word) => {\n          return `${sentence} ${word.text}`;\n        }, '');\n\n        synthesizer.speak(sentence, language);\n      }\n    }\n  }\n}\n","'use strict';\n\nexport default class LocalStorage {\n  static isSupported() {\n    try {\n      return !!self.localStorage && Number.isInteger(self.localStorage.length);\n    } catch(e) {\n      return false;\n    }\n  }\n\n  /**\n   * Gets all items from the specified store.\n   *\n   * @param {string} storeKey Key of the store to retrieve all items from.\n   * @return {Promise.<Array>}\n   */\n  getAll(storeKey) {\n    const serializedStore = localStorage.getItem(storeKey);\n\n    return Promise.resolve(\n      serializedStore ?\n        Array.from((new Map(JSON.parse(serializedStore))).values()) : []\n    );\n  }\n\n  /**\n   * Returns single item from the store by item's key.\n   *\n   * @param {string} storeKey Key of the store to retrieve item from.\n   * @param {string} itemKey Key of the item to retrieve.\n   * @return {*}\n   */\n  getByKey(storeKey, itemKey) {\n    const serializedStore = localStorage.getItem(storeKey);\n    const store = new Map(serializedStore ? JSON.parse(serializedStore) : []);\n\n    if (!store.has(itemKey)) {\n      return Promise.reject(\n        new Error(`There is no item (${itemKey}) in the store (${storeKey}).`)\n      );\n    }\n\n    return Promise.resolve(store.get(itemKey));\n  }\n\n  /**\n   * Adds/updates item to/in specified store.\n   *\n   * @param {string} storeKey Key of the store to save item to.\n   * @param {string} itemKey Key of the item to save.\n   * @param {*} itemData Item data to save.\n   * @return {Promise}\n   */\n  set(storeKey, itemKey, itemData) {\n    const serializedStore = localStorage.getItem(storeKey);\n\n    const store = new Map(serializedStore ? JSON.parse(serializedStore) : []);\n    store.set(itemKey, itemData);\n\n    localStorage.setItem(storeKey, JSON.stringify(Array.from(store.entries())));\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Removes item from the specified store.\n   *\n   * @param {string} storeKey Key of the store to remove item from.\n   * @param {string} itemKey Key of the item to remove.\n   * @return {Promise}\n   */\n  remove(storeKey, itemKey) {\n    const serializedStore = localStorage.getItem(storeKey);\n\n    if (serializedStore) {\n      const store = new Map(JSON.parse(serializedStore));\n      store.delete(itemKey);\n\n      localStorage.setItem(\n        storeKey, JSON.stringify(Array.from(store.entries()))\n      );\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Entirely clears specified store.\n   *\n   * @param {string} storeKey Key of the store to clear.\n   * @return {Promise}\n   */\n  clear(storeKey) {\n    localStorage.removeItem(storeKey);\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Clears all available stores.\n   *\n   * @return {Promise}\n   */\n  clearAll() {\n    localStorage.clear();\n    return Promise.resolve();\n  }\n}\n","'use strict';\n\nconst p = Object.freeze({ db: Symbol('db') });\n\nexport default class InMemoryStorage {\n  constructor() {\n    this[p.db] = new Map();\n  }\n\n  /**\n   * Gets all items from the specified store.\n   *\n   * @param {string} storeKey Key of the store to retrieve all items from.\n   * @return {Promise.<Array>}\n   */\n  getAll(storeKey) {\n    const store = this[p.db].get(storeKey);\n\n    return Promise.resolve(store ? Array.from(store.values()) : []);\n  }\n\n  /**\n   * Returns single item from the specified store by item's key.\n   *\n   * @param {string} storeKey Key of the store to retrieve item from.\n   * @param {string} itemKey Key of the item to retrieve.\n   * @return {*}\n   */\n  getByKey(storeKey, itemKey) {\n    const store = this[p.db].get(storeKey);\n\n    if (!store || store.has(itemKey)) {\n      return Promise.reject(\n        new Error(`There is no item (${itemKey}) in the store (${storeKey}).`)\n      );\n    }\n\n    return Promise.resolve(store.get(itemKey));\n  }\n\n  /**\n   * Adds/updates item to/in specified store.\n   *\n   * @param {string} storeKey Key of the store to save item to.\n   * @param {string} itemKey Key of the item to save.\n   * @param {*} itemData Item data to save.\n   * @return {Promise}\n   */\n  set(storeKey, itemKey, itemData) {\n    let store = this[p.db].get(storeKey);\n\n    if (!store) {\n      this[p.db].set(storeKey, (store = new Map()));\n    }\n\n    store.set(itemKey, itemData);\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Removes item from the specified store.\n   *\n   * @param {string} storeKey Key of the store to remove item from.\n   * @param {string} itemKey Key of the item to remove.\n   * @return {Promise}\n   */\n  remove(storeKey, itemKey) {\n    const store = this[p.db].get(storeKey);\n\n    if (store) {\n      store.delete(itemKey);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Entirely clears specified store.\n   *\n   * @param {string} storeKey Key of the store to clear.\n   * @return {Promise}\n   */\n  clear(storeKey) {\n    const store = this[p.db].get(storeKey);\n\n    if (store) {\n      store.clear();\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Clears all available stores.\n   *\n   * @return {Promise}\n   */\n  clearAll() {\n    this[p.db].clear();\n    return Promise.resolve();\n  }\n}\n","'use strict';\n\nconst p = Object.freeze({\n  canvas: Symbol('canvas'),\n  context: Symbol('context'),\n  width: Symbol('width'),\n  height: Symbol('height'),\n  currentPoint: Symbol('currentPoint'),\n  previousPoint: Symbol('previousPoint'),\n  flag: Symbol('flag'),\n  styleColor: Symbol('styleColor'),\n  styleWidth: Symbol('styleWidth'),\n\n  // Methods.\n  findXY: Symbol('findXY'),\n  draw: Symbol('draw')\n});\n\n/**\n * Instance of the Defer class is just a handy wrapper around native Promise\n * object intended to provide dedicated 'resolve' and 'reject' methods.\n */\nexport default class Painter {\n  constructor(canvas) {\n    this[p.canvas] = canvas;\n    this[p.context] = canvas.getContext('2d');\n    this[p.width] = canvas.width;\n    this[p.height] = canvas.height;\n\n    this[p.styleColor] = '#000';\n    this[p.styleWidth] = 2;\n\n    this[p.currentPoint] = { x: 0, y: 0 };\n    this[p.previousPoint] = { x: 0, y: 0 };\n    this[p.flag] = false;\n\n    canvas.addEventListener('mousemove', (e) => this[p.findXY]('move', e));\n    canvas.addEventListener('mousedown', (e) => this[p.findXY]('down', e));\n    canvas.addEventListener('mouseup', (e) => this[p.findXY]('up', e));\n    canvas.addEventListener('mouseout', (e) => this[p.findXY]('out', e));\n\n    Object.seal(this);\n  }\n\n  setStyle(color, width) {\n    if (!color) {\n      throw new Error('Color should a valid non-empty HEX color string!');\n    }\n\n    if (!Number.isInteger(width) || width < 0) {\n      throw Error('Width should a valid positive integer!');\n    }\n\n    this[p.styleColor] = color;\n    this[p.styleWidth] = width;\n  }\n\n  clear() {\n    this[p.context].clearRect(0, 0, this[p.width], this[p.height]);\n  }\n\n  [p.findXY](res, e) {\n    //const canvas = this[p.canvas];\n\n    //let x, y;\n    /*if (e.layerX || e.layerX === 0) {\n      x = e.layerX;\n      y = e.layerY;\n    } else if (e.offsetX || e.offsetX === 0) {*/\n      const x = e.offsetX;\n      const y = e.offsetY;\n\n    //}\n\n    if (res === 'down') {\n      console.log(`e.offsetX: ${e.offsetX}, e.offsetY: ${e.offsetY}`);\n      this[p.previousPoint] = this[p.currentPoint];\n      this[p.currentPoint] = {x, y};\n      //  x: x, //e.clientX - canvas.offsetLeft,\n      //  y: y//e.clientY - canvas.offsetTop\n      //};\n\n      this[p.flag] = true;\n\n      const context = this[p.context];\n      context.beginPath();\n      context.fillStyle = this[p.styleColor];\n      context.fillRect(\n        this[p.currentPoint].x, this[p.currentPoint].y, this[p.styleWidth],\n        this[p.styleWidth]\n      );\n      context.closePath();\n    } else if (res === 'up' || res === 'out') {\n      this[p.flag] = false;\n    } else if (res === 'move' && this[p.flag]) {\n      this[p.previousPoint] = this[p.currentPoint];\n      this[p.currentPoint] = {x, y};\n      //  x: x,//e.clientX - canvas.offsetLeft,\n      //  y: y//e.clientY - canvas.offsetTop\n      // };\n\n      this[p.draw]();\n    }\n  }\n\n  [p.draw]() {\n    const context = this[p.context];\n\n    context.beginPath();\n    context.moveTo(this[p.previousPoint].x, this[p.previousPoint].y);\n    context.lineTo(this[p.currentPoint].x, this[p.currentPoint].y);\n    context.strokeStyle = this[p.styleColor];\n    context.lineWidth = this[p.styleWidth];\n    context.stroke();\n    context.closePath();\n  }\n}\n"],"names":["addSample","sampleBlob","sampleId","sampleIds","currentSampleIndex","sampleContainer","document","createElement","classList","id","samplePreview","src","window","URL","createObjectURL","recognizeButton","type","textContent","dataset","kind","sampleActions","RECOGNIZE","repeatButton","REPEAT","appendChild","set","image","text","scrollIntoView","outlineSampleWords","sample","onload","canvasContext","blobRendererComponent","getContext","clearRect","Number","getAttribute","setAttribute","blobLoaderComponent","width","height","drawImage","translate","textAngle","orientation","LEFT","RIGHT","DOWN","rotate","Math","PI","region","regions","line","lines","word","words","boundingBox","split","map","dimension","trim","rect","stroke","toBlob","imageBlob","getElementById","querySelector","body","addSampleFromURL","url","fetch","catch","e","warn","proxyURL","headers","Headers","append","then","response","blob","error","p","Object","freeze","Symbol","Defer","promise","Promise","resolve","reject","this","value","VideoManager","getMediaStream","video","audio","undefined","navigator","mediaDevices","getUserMedia","getUserMediaOld","facingMode","exact","stream","log","err","constraints","webkitGetUserMedia","mozGetUserMedia","call","Error","TextRecognizer","apikey","language","detectOrientation","apiURL","apiKey","recognize","formData","FormData","json","setAPIKey","SpeechSynthesizer","pitch","rate","synthesis","speechSynthesis","seal","speak","utterance","SpeechSynthesisUtterance","voice","getPreferredVoice","lang","allVoices","getVoices","length","voices","filter","startsWith","femaleVoices","name","indexOf","LANGUAGES","Map","DEFAULT_VOICE_PITCH","DEFAULT_VOICE_RATE","TextReader","synthesizer","read","textDescription","numberOfTextRegions","get","i","l","sentence","reduce","LocalStorage","isSupported","self","localStorage","isInteger","getAll","storeKey","serializedStore","getItem","Array","from","JSON","parse","values","getByKey","itemKey","store","has","itemData","setItem","stringify","entries","remove","delete","clear","removeItem","clearAll","db","InMemoryStorage","Painter","canvas","context","styleColor","styleWidth","currentPoint","x","y","previousPoint","flag","addEventListener","_this","findXY","setStyle","color","res","offsetX","offsetY","beginPath","fillStyle","fillRect","closePath","draw","moveTo","lineTo","strokeStyle","lineWidth","canPlayDefer","videoManager","textReader","textRecognizer","storage","samples","Uint32Array","crypto","getRandomValues","apiKeyComponent","samplesListComponent","target","nodeName","toUpperCase","parseInt","buttonKind","data","container","add","videoPreviewComponent","play","videoHeight","videoWidth","isNaN","shotButton","removeAttribute","urlProviderURL","urlProviderSubmit","examplesList","sampleURL","localFileProviderPath","localFileProviderUpload","file","files","click","manualSampleCanvas","manualSampleColorPicker","manualSampleWidth","manualSampleClearButton","manualSampleSubmit","painter"],"mappings":"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","sourceRoot":"/source/"}